<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="dictionary.dictionaries.impl.Dictionary2" />

    <bean name = "contentsLoader" class="dictionary.services.loaders.ContentsLoader" />

    <bean name = "synonymLoader" class="dictionary.services.loaders.SynonymLoader">
        <constructor-arg value="loader_context_2.xml" />
    </bean>

    <bean id="logger" class="org.apache.log4j.Logger" factory-method="getLogger">
        <constructor-arg type="java.lang.String" value="dictionary2Logger" />
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/dictionary_2"/>
        <property name="username" value=""/>
        <property name="password" value=""/>
    </bean>

    <!--
        Creates the transaction manager bean that integrates the used JPA provider with the
        Spring transaction mechanism.
    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Enables annotation-driven transaction management. -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <context:component-scan base-package="dictionary.repositories.jdbc" />
</beans>